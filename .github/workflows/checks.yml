name: checks

on:
  push:
    branches: ['**']

jobs:

  ctest:
    strategy:
      fail-fast: false
      matrix:
        runs_on: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        build_config: ['Debug', 'Release']
        compiler: ['gcc', 'clang', 'msvc']
        exclude:
          - runs_on: ubuntu-latest
            compiler: msvc
          - runs_on: macos-latest
            compiler: msvc
          - runs_on: windows-latest
            compiler: gcc
          - runs_on: windows-latest
            compiler: clang

    runs-on: ${{ matrix.runs_on }}
    steps:
      - if: runner.os == 'Linux'
        run: sudo apt-get install -y ninja-build
      - if: runner.os == 'macOS'
        run: brew install ninja

      - uses: actions/checkout@v3
      - run: cmake --version

      - if: runner.os != 'Windows'
        run: |
          export CC=${{ matrix.compiler == 'clang' && 'clang' || 'gcc' }}
          export CXX=${{ matrix.compiler == 'clang' && 'clang++' || 'g++' }}
          cmake -S . -B build --log-context -G Ninja -DCMAKE_BUILD_TYPE=${{ matrix.build_config }}
      - if: runner.os == 'Windows'
        run: cmake -S . -B build --log-context -G "Visual Studio 17 2022"

      - if: runner.os != 'Windows'
        run: cmake --build build
      - if: runner.os == 'Windows'
        run: cmake --build build --config ${{ matrix.build_config }}
